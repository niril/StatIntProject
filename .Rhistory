simMean <- apply(simData,1,mean)
#Calculate the standard error
simSE <- sd(simMean)
#Plot histogram of means
hist(simMean,
density=20, breaks=25, prob=TRUE, freq = FALSE,
xlab="Data average of 40 data-points",
main="Histogram")
x<-seq(min(simMean),max(simMean),length=40)
y<-dnorm(x,popMean,sd=simSE)
lines(x, y, col="darkblue", lwd=3)
#Add line to show the population mean.
abline(v=mean(popMean),col="red", lwd=3)
#Calculate mean of the entire data-set
popMean <- mean(simData)
#Calculate mean of each data series
simMean <- apply(simData,1,mean)
#Calculate the standard error
simSE <- sd(simMean)
#Plot histogram of means
hist(simMean,
density=25, breaks=25, prob=TRUE, freq = FALSE,
xlab="Data average of 40 data-points",
main="Histogram")
x<-seq(min(simMean),max(simMean),length=40)
y<-dnorm(x,popMean,sd=simSE)
lines(x, y, col="darkblue", lwd=3)
#Add line to show the population mean.
abline(v=mean(popMean),col="red", lwd=3)
#Calculate mean of the entire data-set
popMean <- mean(simData)
#Calculate mean of each data series
simMean <- apply(simData,1,mean)
#Calculate the standard error
simSE <- sd(simMean)
#Plot histogram of means
hist(simMean,
density=20, breaks=25, prob=TRUE, freq = FALSE,
xlab="Data average of 40 data-points",
main="Histogram")
x<-seq(min(simMean),max(simMean),length=40)
y<-dnorm(x,popMean,sd=simSE)
lines(x, y, col="darkblue", lwd=3)
#Add line to show the population mean.
abline(v=mean(popMean),col="red", lwd=3)
popMean <- mean(simData)
#Calculate mean of each data series
simMean <- apply(simData,1,mean)
#Calculate the standard error
simSE <- sd(simMean)
#Plot histogram of means
hist(simMean,
density=20, breaks=40, prob=TRUE, freq = FALSE,
xlab="Data average of 40 data-points",
main="Histogram")
x<-seq(min(simMean),max(simMean),length=40)
y<-dnorm(x,popMean,sd=simSE)
lines(x, y, col="darkblue", lwd=3)
#Add line to show the population mean.
abline(v=mean(popMean),col="red", lwd=3)
popMean <- mean(simData)
#Calculate mean of each data series
simMean <- apply(simData,1,mean)
#Calculate the standard error
simSE <- sd(simMean)
#Plot histogram of means
hist(simMean,
density=20, breaks=15, prob=TRUE, freq = FALSE,
xlab="Data average of 40 data-points",
main="Histogram")
x<-seq(min(simMean),max(simMean),length=40)
y<-dnorm(x,popMean,sd=simSE)
lines(x, y, col="darkblue", lwd=3)
#Add line to show the population mean.
abline(v=mean(popMean),col="red", lwd=3)
#Calculate mean of the entire data-set
popMean <- mean(simData)
#Calculate mean of each data series
simMean <- apply(simData,1,mean)
#Calculate the standard error
simSE <- sd(simMean)
#Plot histogram of means
hist(simMean,
density=20, breaks=20, prob=TRUE, freq = FALSE,
xlab="Data average of 40 data-points",
main="Histogram")
x<-seq(min(simMean),max(simMean),length=40)
y<-dnorm(x,popMean,sd=simSE)
lines(x, y, col="darkblue", lwd=3)
#Add line to show the population mean.
abline(v=mean(popMean),col="red", lwd=3)
?shapiro.test
?qqnorm
swPValue<-shapiro.test(simMean)$p.value
qqnorm(simMean);qqline(simMean, col = 3)
qqnorm(simMean);qqline(simMean, col = 2)
qqnorm(simMean);qqline(simMean, col = 2, lwd = 2)
qqnorm(simMean);qqline(simMean, col = 2, lwd = 4)
qqnorm(simMean);qqline(simMean, col = 2, lwd = 3)
?qqline
#Calculate mean of each data series
simVar <- apply(simData,1,var)
popVar <- var(simData)
#Plot histogram of means
hist(simVar,
density=20, breaks=20, prob=TRUE, freq = FALSE,
xlab="Data variance of 40 data-points",
main="Histogram of variance")
# x<-seq(min(simMean),max(simMean),length=40)
# y<-dnorm(x,popMean,sd=simSE)
# lines(x, y, col="darkblue", lwd=3)
#Add line to show the population variance.
abline(v=mean(popVar),col="red", lwd=3)
#Calculate mean of each data series
simVar <- apply(simData,1,var)
popVar <- mean(simVar)
#Plot histogram of means
hist(simVar,
density=20, breaks=20, prob=TRUE, freq = FALSE,
xlab="Data variance of 40 data-points",
main="Histogram of variance")
# x<-seq(min(simMean),max(simMean),length=40)
# y<-dnorm(x,popMean,sd=simSE)
# lines(x, y, col="darkblue", lwd=3)
#Add line to show the population variance.
abline(v=mean(popVar),col="red", lwd=3)
n <- 200
Nsim <- 1000
lampda <- 0.2
#Simulate the data and store each simulation set in rows in a matrix
simData <- matrix(rexp(Nsim*n, lampda), Nsim, n)
#Calculate mean of each data series
simVar <- apply(simData,1,var)
popVar <- mean(simVar)
#Plot histogram of means
hist(simVar,
density=20, breaks=20, prob=TRUE, freq = FALSE,
xlab="Data variance of 40 data-points",
main="Histogram of variance")
# x<-seq(min(simMean),max(simMean),length=40)
# y<-dnorm(x,popMean,sd=simSE)
# lines(x, y, col="darkblue", lwd=3)
#Add line to show the population variance.
abline(v=mean(popVar),col="red", lwd=3)
#Set seed to make reproducible simulations
set.seed(31415)
#Set variables
n <- 40
Nsim <- 1000
lampda <- 0.2
#Simulate the data and store each simulation set in rows in a matrix
simData <- matrix(rexp(Nsim*n, lampda), Nsim, n)
simVar <- apply(simData,1,var)
popVar <- mean(simVar)
#Plot histogram of means
hist(simVar,
density=20, breaks=20, prob=TRUE, freq = FALSE,
xlab="Data variance of 40 data-points",
main="Histogram of variance")
# x<-seq(min(simMean),max(simMean),length=40)
# y<-dnorm(x,popMean,sd=simSE)
# lines(x, y, col="darkblue", lwd=3)
#Add line to show the population variance.
abline(v=mean(popVar),col="red", lwd=3)
var(simData)
?var
sd(simData)
sd(simData)^2
mean(simVar)
simVar <- apply(simData,1,var)
#Calculate the variance of the population
popVar <- sd(simData)^2
#Plot histogram of means
hist(simVar,
density=20, breaks=20, prob=TRUE, freq = FALSE,
xlab="Data variance of 40 data-points",
main="Histogram of variance")
x<-seq(min(simVar),max(simVar),length=40)
y<-dnorm(x,simVar,sd=sd(simVar))
lines(x, y, col="darkblue", lwd=3)
#Add line to show the population variance.
abline(v=mean(popVar),col="red", lwd=3)
simVar <- apply(simData,1,var)
#Calculate the variance of the population
popVar <- sd(simData)^2
#Plot histogram of means
hist(simVar,
density=20, breaks=20, prob=TRUE, freq = FALSE,
xlab="Data variance of 40 data-points",
main="Histogram of variance")
x<-seq(min(simVar),max(simVar),length=40)
y<-dnorm(x,popVar,sd=sd(simVar))
lines(x, y, col="darkblue", lwd=3)
#Add line to show the population variance.
abline(v=mean(popVar),col="red", lwd=3)
#Calculate variance of each data series
simVar <- apply(simData,1,var)
#Calculate the variance of the population
popVar <- sd(simData)^2
#Plot histogram of means
hist(simVar,
density=20, breaks=15, prob=TRUE, freq = FALSE,
xlab="Data variance of 40 data-points",
main="Histogram of variance")
x<-seq(min(simVar),max(simVar),length=40)
y<-dnorm(x,popVar,sd=sd(simVar))
lines(x, y, col="darkblue", lwd=3)
#Add line to show the population variance.
abline(v=mean(popVar),col="red", lwd=3)
#Plot histogram of means
hist(simVar,
density=20, breaks=10, prob=TRUE, freq = FALSE,
xlab="Data variance of 40 data-points",
main="Histogram of variance")
x<-seq(min(simVar),max(simVar),length=40)
y<-dnorm(x,popVar,sd=sd(simVar))
lines(x, y, col="darkblue", lwd=3)
#Add line to show the population variance.
abline(v=mean(popVar),col="red", lwd=3)
popVar <- sd(simData)^2
#Plot histogram of means
hist(simVar,
density=20, breaks=20, prob=TRUE, freq = FALSE,
xlab="Data variance of 40 data-points",
main="Histogram of variance")
x<-seq(min(simVar),max(simVar),length=40)
y<-dnorm(x,popVar,sd=sd(simVar))
lines(x, y, col="darkblue", lwd=3)
#Add line to show the population variance.
abline(v=mean(popVar),col="red", lwd=3)
shapiro.test(simVar)$p.value
shapiro.test(simVar)
simVar
par(mfrow(c(1,2)))
par(mfRow(c(1,2)))
par(mfrow=c(2,2))
shapiro.test(simVar)
shapiro.test(simMean)
#Set seed to make reproducible simulations
set.seed(31415)
#Set variables
n <- 40
Nsim <- 1000
lampda <- 0.2
#Simulate the data and store each simulation set in rows in a matrix
simData <- matrix(rexp(Nsim*n, lampda), Nsim, n)
#Calculate mean of the entire data-set
popMean <- mean(simData)
#Calculate mean of each data series
simMean <- apply(simData,1,mean)
#Calculate the standard error
simSE <- sd(simMean)
#Plot histogram of means
hist(simMean,
density=20, breaks=20, prob=TRUE, freq = FALSE,
xlab="Data average of 40 data-points",
main="Histogram of mean")
x<-seq(min(simMean),max(simMean),length=40)
y<-dnorm(x,popMean,sd=simSE)
lines(x, y, col="darkblue", lwd=3)
#Add line to show the population mean.
abline(v=mean(popMean),col="red", lwd=3)
#Calculate variance of each data series
simVar <- apply(simData,1,var)
#Calculate the variance of the population
popVar <- sd(simData)^2
#Plot histogram of means
hist(simVar,
density=20, breaks=20, prob=TRUE, freq = FALSE,
xlab="Data variance of 40 data-points",
main="Histogram of variance")
x<-seq(min(simVar),max(simVar),length=40)
y<-dnorm(x,popVar,sd=sd(simVar))
lines(x, y, col="darkblue", lwd=3)
#Add line to show the population variance.
abline(v=mean(popVar),col="red", lwd=3)
#Calculate the p-value for a Shapiroâ€“Wilk test
meanSWPValue<-shapiro.test(simMean)$p.value
varSWPValue<-shapiro.test(simVar)$p.value
par(mfrow=c(1,2))
qqnorm(simMean);qqline(simMean, col = 2, lwd = 3)
qqnorm(simVar);qqline(simVar, col = 2, lwd = 3)
dim(simMean)
length(simMean)
length(simVar)
simVar <- apply(simData,1,sd^2)
simVar <- apply(simData,1,sd)^2
?shapiro.text
?shapiro.test
par(mfrow=c(1,2))
qqnorm(simMean);qqline(simMean, col = 2, lwd = 3)
qqnorm(log(simVar);qqline(log(simVar), col = 2, lwd = 3)
par(mfrow=c(1,2))
qqnorm(simMean);qqline(simMean, col = 2, lwd = 3)
qqnorm(log(simVar));qqline(log(simVar)), col = 2, lwd = 3)
par(mfrow=c(1,2))
qqnorm(simMean);qqline(simMean, col = 2, lwd = 3)
qqnorm(log(simVar));qqline(log(simVar), col = 2, lwd = 3)
varSWPValue<-shapiro.test(log(simVar))$p.value
round(varSWPValue,5)
qqnorm(log(simMean));qqline(log(simMean), col = 2, lwd = 3)
qqnorm(log(simVar));qqline(log(simVar), col = 2, lwd = 3)
varSWPValue<-shapiro.test(log(simVar))$p.value
round(meanSWPValue,5)
meanSWPValue<-shapiro.test(log(simMean))$p.value
round(meanSWPValue,5)
round(varSWPValue,5)
round(meanSWPValue,5)
par(mfrow=c(1,2))
qqnorm(simMean, main ="Normal Q-Q Plot: Mean");qqline(simMean, col = 2, lwd = 3)
qqnorm(simVar, main ="Normal Q-Q Plot: Variance");qqline(simVar, col = 2, lwd = 3)
qqnorm(log(simMean), main ="LogNormal Q-Q Plot: Mean"));qqline(log(simMean), col = 2, lwd = 3)
qqnorm(log(simVar), main ="LogNormal Q-Q Plot: Variance"));qqline(log(simVar), col = 2, lwd = 3)
logvarSWPValue<-shapiro.test(log(simVar))$p.value
logmeanSWPValue<-shapiro.test(log(simMean))$p.value
logmeanSWPValue
logvarSWPValue
min(simData)
data(Thoothgrowth)
data("ToothGrowth")
dat<-data("ToothGrowth")
summary(dat)
dat
data(ToothGrowth)
dat<-data(ToothGrowth)
summary(dat)
?data
summary(ToothGrowth)
str(ToothGrowth)
summary(ToothGrowth)
as.data.frame(table(ToothGrowth))
as.data.frame(table(ToothGrowth$dose))
as.data.frame(table(ToothGrowth$supp))
?ToothGrowth
dia(ToothGrowth)
library(corrplot)
download.packages(corrplot)
install.packages(corrplot)
install.packages("corrplot")
library(corrplot)
library("corrplot")
M <- cor(corrplot)
corrplot(M, method = "circle"
)
M <- cor(ToothGrowth)
corrplot(M, method = "circle"
)
M <- cor(as.numeric(ToothGrowth))
corrplot(M, method = "circle")
?pairs
pairs(ToothGrowth)
?paris
?pairs
pairs(ToothGrowth, pch = 21, bg = c("red","blue")[ToothGrowth$supp])
pairs(ToothGrowth, pch = 21, bg = c("orange","blue")[ToothGrowth$supp])
pairs(ToothGrowth, pch = 21, bg = c("orange","green")[ToothGrowth$supp])
pairs(ToothGrowth, pch = 21, bg = c("orange","green")[ToothGrowth$supp], lower.panel=NULL)
as.data.frame(table(dose))
supp<-ToothGrowth$supp
len<-ToothGrowth$len
dose<-ToothGrowth$dose
plot(supp,len, col = c("red","yellow","green")[dose])
?plot
plot(supp,len, col = c("red","yellow","green")[dose], type = "p")
plot(supp,len, type = "p")
?ToothGrowth
plot(supp,len, type = "p", xlab ="Supplementary type", ylab = "Tooth length")
?t.test
t.test(len ~ supp)
t.test(len ~ supp, alt ="two.sided")
t.test(len ~ supp, alt ="two.sided", paired = F, var.equal = F)
t.test(len ~ supp, alt ="two.sided", paired = F, var.equal = F)$p.value
plot(dose,len, xlab ="dose (mg/day)", ylab = "Tooth length")
boxplot(dose,len, xlab ="dose (mg/day)", ylab = "Tooth length")
boxplot(supp,len, type = "p", xlab ="Supplementary type", ylab = "Tooth length")
plot(supp,len, type = "p", xlab ="Supplementary type", ylab = "Tooth length")
?boxplot
boxplot(len ~dose, xlab ="dose (mg/day)", ylab = "Tooth length")
boxplot(len ~ supp, type = "p", xlab ="Supplementary type", ylab = "Tooth length")
for (i in 1:3) {
}
pval <- t.test(len ~ as.factor(dose =1), alt ="two.sided", paired = F, var.equal = F)$p.value
conf <- t.test(len ~ as.factor(dose =1), alt ="two.sided", paired = F, var.equal = F)$conf
pval
?t.test
pval <- t.test(len ~ as.factor(dose)[=1], alt ="two.sided", paired = F, var.equal = F)$p.value
conf <- t.test(len ~ as.factor(dose)[=1], alt ="two.sided", paired = F, var.equal = F)$conf
pval <- t.test(len ~ dose[dose %in% c(0.5,1)], alt ="two.sided", paired = F, var.equal = F)$p.value
conf <- t.test(len ~ dose[dose %in% c(0.5,1)], alt ="two.sided", paired = F, var.equal = F)$conf
pval <- t.test(len[dose %in% c(0.5,1)] ~ dose[dose %in% c(0.5,1)], alt ="two.sided", paired = F, var.equal = F)$p.value
conf <- t.test(len[dose %in% c(0.5,1)] ~ dose[dose %in% c(0.5,1)], alt ="two.sided", paired = F, var.equal = F)$conf
pval
conf
?ToothGrowth
dose[dose %in% c(0.5,1)]
unique(dose)
dose %in% c(0.5,1,2)[1,2]
c(0.5,1,2)[1,2]
c(0.5,1,2)[1:2]
c(0.5,1,2)[1&2]
c(0.5,1,2)[1&3]
c(0.5,1,2)[1&&3]
c(0.5,1,2)[1or3]
c(0.5,1,2)[1|3]
c(0.5,1,2)[1.3,]
c(0.5,1,2)[1.3]
c(0.5,1,2)[1.5]
c(0.5,1,2)[1:2]
c(0.5,1,2)[c("1","3")]
c(0.5,1,2)[c(1,3)]
doseIndex <- c(1,2)
pval <- t.test(len[dose %in% c(0.5,1,2)[doseIndex]] ~ dose[dose %in% c(0.5,1,2)[doseIndex], alt ="two.sided", paired = F, var.equal = F)$p.value
conf <- t.test(len[dose %in% c(0.5,1,2)[doseIndex]] ~ dose[dose %in% c(0.5,1,2)[doseIndex], alt ="two.sided", paired = F, var.equal = F)$conf
pval <- t.test(len[dose %in% c(0.5,1,2)[doseIndex]] ~ dose[dose %in% c(0.5,1,2)[doseIndex]], alt ="two.sided", paired = F, var.equal = F)$p.value
conf <- t.test(len[dose %in% c(0.5,1,2)[doseIndex]] ~ dose[dose %in% c(0.5,1,2)[doseIndex]], alt ="two.sided", paired = F, var.equal = F)$conf
pval
doseIndex <- c(1,2)
dosesTest <- dose %in% c(0.5,1,2)[doseIndex]
pval <- t.test(len[dosesTest] ~ dose[dosesTest], alt ="two.sided", paired = F, var.equal = F)$p.value
conf <- t.test(len[dosesTest] ~ dose[dosesTest], alt ="two.sided", paired = F, var.equal = F)$conf
for (i in 1:2) {
for (j in 2:3) {
doseIndex <- c(i,j)
dosesTest <- dose %in% unique(dose)[doseIndex]
pval <- t.test(len[dosesTest] ~ dose[dosesTest], alt ="two.sided", paired = F, var.equal = F)$p.value
conf <- t.test(len[dosesTest] ~ dose[dosesTest], alt ="two.sided", paired = F, var.equal = F)$conf
}
}
for (i in 1:2) {
for (j in (i+1):3) {
doseIndex <- c(i,j)
dosesTest <- dose %in% unique(dose)[doseIndex]
pval <- t.test(len[dosesTest] ~ dose[dosesTest], alt ="two.sided", paired = F, var.equal = F)$p.value
conf <- t.test(len[dosesTest] ~ dose[dosesTest], alt ="two.sided", paired = F, var.equal = F)$conf
}
}
pval
conf
rbind(pval,conf)
rbind(pval,conf[1])
cbind(pval,conf)
cbind(pval,conf[1],conf[2])
tResults <- NULL
for (i in 1:2) {
for (j in (i+1):3) {
doseIndex <- c(i,j)
dosesTest <- dose %in% unique(dose)[doseIndex]
pval <- t.test(len[dosesTest] ~ dose[dosesTest], alt ="two.sided", paired = F, var.equal = F)$p.value
conf <- t.test(len[dosesTest] ~ dose[dosesTest], alt ="two.sided", paired = F, var.equal = F)$conf
tResults<-rbind(tResults,cbind(pval,conf[1],conf[2]))
}
}
tResults
row.names(tResults[2,])<-"test"
row.names(tResults[2,])<-c("test")
row.names(tResults[2,:])<-c("test")
row.names(tResults[2])<-c("test")
row.names(tResults)<-c("test")
?row.names
colnames(tResults)<-c("p.value","conf.low","conf.high")
tResults
rownames(tResults) <- c(doseindex(1,2),"3","4")
rownames(tResults) <- c(doseIndex(1,2),"3","4")
rownames(tResults) <- c(unique(dose)[1,2],"3","4")
rownames(tResults) <- c(unique(dose)[c(1,2)],"3","4")
rownames(tResults) <- c("0.0 & 0.5","0.0 & 2.0","0.5 & 2.0")
tResults
rownames(tResults) <- c("0.0 & 0.5|","0.0 & 2.0|","0.5 & 2.0|")
tResults <- NULL
for (i in 1:2) {
for (j in (i+1):3) {
doseIndex <- c(i,j)
dosesTest <- dose %in% unique(dose)[doseIndex]
pval <- t.test(len[dosesTest] ~ dose[dosesTest], alt ="two.sided", paired = F, var.equal = F)$p.value
conf <- t.test(len[dosesTest] ~ dose[dosesTest], alt ="two.sided", paired = F, var.equal = F)$conf
tResults<-rbind(tResults,cbind(pval,conf[1],conf[2]))
}
}
rownames(tResults) <- c("0.0 & 0.5|","0.0 & 2.0|","0.5 & 2.0|")
colnames(tResults)<-c("p.value","conf.low","conf.high")
tResults
boxplot(len[supp == 1] ~ dose[supp == 1], xlab ="dose (mg/day)", ylab = "Tooth length")
supp == 1
summary(supp == 1)
head(supp)
boxplot(len[dose == 0] ~ supp[dose == 0], xlab ="dose (mg/day)", ylab = "Tooth length")
done == 0
dose == 0
table(dose == 0)
summary(dose)
boxplot(len[dose == 0.5] ~ supp[dose == 0.5], xlab ="dose (mg/day)", ylab = "Tooth length")
boxplot(len[dose == 0.5] ~ supp[dose == 0.5], xlab ="dose (mg/day)", ylab = "Tooth length")
boxplot(len[dose == 1] ~ supp[dose == 1], xlab ="dose (mg/day)", ylab = "Tooth length")
boxplot(len[dose == 2] ~ supp[dose == 2], xlab ="dose (mg/day)", ylab = "Tooth length")
par(mfrow=c(1,3))
boxplot(len[dose == 0.5] ~ supp[dose == 0.5], xlab ="dose (mg/day)", ylab = "Tooth length")
boxplot(len[dose == 1] ~ supp[dose == 1], xlab ="dose (mg/day)", ylab = "Tooth length")
boxplot(len[dose == 2] ~ supp[dose == 2], xlab ="dose (mg/day)", ylab = "Tooth length")
boxplot(len[dose == 2] ~ supp[dose == 2], xlab ="dose (mg/day)", ylab = "Tooth length")
par(mfrow=c(1,3), ylim = c(0,50))
boxplot(len[dose == 0.5] ~ supp[dose == 0.5], xlab ="dose (mg/day)", ylab = "Tooth length")
boxplot(len[dose == 1] ~ supp[dose == 1], xlab ="dose (mg/day)", ylab = "Tooth length")
boxplot(len[dose == 2] ~ supp[dose == 2], xlab ="dose (mg/day)", ylab = "Tooth length")
par(mfrow=c(1,3), ylim = c(0,50))
boxplot(len[dose == 0.5] ~ supp[dose == 0.5], xlab ="dose (mg/day)", ylab = "Tooth length", par())
boxplot(len[dose == 1] ~ supp[dose == 1], xlab ="dose (mg/day)", ylab = "Tooth length")
boxplot(len[dose == 2] ~ supp[dose == 2], xlab ="dose (mg/day)", ylab = "Tooth length")
```{r}
par(mfrow=c(1,3), ylim = c(0,50))
boxplot(len[dose == 0.5] ~ supp[dose == 0.5], xlab ="dose (mg/day)", ylab = "Tooth length")
boxplot(len[dose == 1] ~ supp[dose == 1], xlab ="dose (mg/day)", ylab = "Tooth length")
boxplot(len[dose == 2] ~ supp[dose == 2], xlab ="dose (mg/day)", ylab = "Tooth length")
